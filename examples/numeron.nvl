let n be [0]*3 asmut;

# first digit
roll 1 dice with 9 faces to n[0];

# second digit
while true;
    roll 1 dice with 9 faces to n[1];
    if n[0] /= n[1];
        break;
    end;
end;

# third digit
while true;
    roll 1 dice with 9 faces to n[2];
    if n[0] /= n[2] && n[1] /= n[2];
        break;
    end;
end;

print "chosen:", n[0], n[1], n[2];

while true;
    let in_num be 0 asmut;
    input "Input a 3-digit number" to in_num;

    if -(100 <= in_num && in_num <= 999);
        print "the number you input is not 3-digit, try again!";
        continue;
    end;

    let digit be [in_num/100, (in_num/10)%10, in_num%10];
    print digit[0], digit[1], digit[2];

    if digit[0] == digit[1] || digit[1] == digit[2] || digit[2] == digit[0];
        print "all number occurs only once, try again!";
        continue;
    end;

    let eat be 0 asmut;
    let bite be 0 asmut;

    if n[0] == digit[0];
        modify eat to eat+1;
    else if n[0] == digit[1];
        modify bite to bite+1;
    else if n[0] == digit[2];
        modify bite to bite+1;
    end;

    if n[1] == digit[1];
        modify eat to eat+1;
    else if n[1] == digit[0];
        modify bite to bite+1;
    else if n[1] == digit[2];
        modify bite to bite+1;
    end;

    if n[2] == digit[2];
        modify eat to eat+1;
    else if n[2] == digit[0];
        modify bite to bite+1;
    else if n[2] == digit[1];
        modify bite to bite+1;
    end;

    if eat == 3;
        print "Correct!";
        break;
    else;
        print "bite:", bite;
        print "eat:", eat;
    end;
end;
