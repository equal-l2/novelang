let n be [0]*3 asmut;

roll 1 die with 9 faces to n[0];

while true;
    roll 1 die with 9 faces to n[1];
    if n[0] != n[1];
        break;
    end;
end;

while true;
    roll 1 die with 9 faces to n[2];
    if n[0] != n[2] && n[1] != n[2];
        break;
    end;
end;

print "chosen:", n[0], n[1], n[2];

while true;
    let in_num be 0 asmut;
    input "Input 3-digit" to in_num;
    let in be [in_num/100, (in_num/10)%10, in_num%10];
    print in[0], in[1], in[2];

    if in[0] == in[1] || in[1] == in[2] || in[2] == in[0];
        print "all number occurs only once, try again!";
        continue;
    end;

    let eat be 0 asmut;
    let bite be 0 asmut;

    if n[0] == in[0];
        modify eat to eat+1;
    else if n[0] == in[1];
        modify bite to bite+1;
    else if n[0] == in[2];
        modify bite to bite+1;
    end;

    if n[1] == in[1];
        modify eat to eat+1;
    else if n[1] == in[0];
        modify bite to bite+1;
    else if n[1] == in[2];
        modify bite to bite+1;
    end;

    if n[2] == in[2];
        modify eat to eat+1;
    else if n[2] == in[0];
        modify bite to bite+1;
    else if n[2] == in[1];
        modify bite to bite+1;
    end;

    if eat == 3;
        print "Correct!";
        break;
    else;
        print "bite:", bite;
        print "eat:", eat;
    end;
end;
